cmake_minimum_required(VERSION 3.14)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

option(USE_SYSTEM_GOOGLETEST "Use system gtest" ON)
option(USE_SYSTEM_LIBUV "Use system gtest" ON)
option(USE_LOCAL_JSMN "Use local jsmn in the project instead of downloading from the source" ON)
option(BUILD_FULL_STATIC "Fully static binary including libc for musl" OFF)
option(BUILD_STATIC "Fully static binary" OFF)
option(BUILD_TEST "Build test binary" OFF)

if("${CMAKE_BUILD_TYPE}" STREQUAL "")
    set(CMAKE_BUILD_TYPE "Release")
    message("[INFO] CMAKE_BUILD_TYPE not set, setting to Release")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Ofast -fomit-frame-pointer -flto")
endif()

if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
    message("[INFO] Debug Build")
    add_compile_options(-g3 -O0)
else()
    message("[INFO] CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")
endif()

if(DEFINED SANITIZE)
    if(${SANITIZE} STREQUAL undefined)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=undefined")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=undefined")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=undefined")
    elseif(${SANITIZE} STREQUAL address)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=address")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address")
    elseif(${SANITIZE} STREQUAL leak)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=leak")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=leak")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=leak")
    elseif(${SANITIZE} STREQUAL thread)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=thread")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=thread")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=thread")
    endif()
endif()
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-rtti -fno-exceptions")

if(${BUILD_FULL_STATIC})
    set(USE_SYSTEM_GOOGLETEST OFF)
    set(USE_SYSTEM_LIBUV OFF)
    set(BUILD_SHARED_LIBS OFF)
    set(CMAKE_EXE_LINKER_FLAGS "-static")
    set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
elseif(${BUILD_STATIC})
    set(USE_SYSTEM_GOOGLETEST OFF)
    set(USE_SYSTEM_LIBUV OFF)
endif()

include(ExternalProject)
include(FindPkgConfig)

set(proj_name vim9-fuzzy)
if(NOT BUILD_TEST)
    project(${proj_name} C)
else()
    project(${proj_name})
endif()

add_subdirectory(native/ext)
add_subdirectory(native/app)
